// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DLT API Test 1`] = `
Object {
  "Conditions": Object {
    "condition": Object {
      "Fn::If": Array [
        "testCondition",
        true,
        false,
      ],
    },
  },
  "Resources": Object {
    "TestCommonResourcesAnonymousMetric29B2B95B": Object {
      "Condition": "condition",
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Region": Object {
          "Ref": "AWS::Region",
        },
        "Resource": "AnonymousMetric",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "TestCommonResourcesCustomResourceLambda707B5671",
            "Arn",
          ],
        },
        "SolutionId": "testId",
        "UUID": Object {
          "Fn::GetAtt": Array [
            "TestCommonResourcesUUIDFDB821D1",
            "UUID",
          ],
        },
        "VERSION": "testVersion",
        "existingVPC": "false",
      },
      "Type": "Custom::AnonymousMetric",
      "UpdateReplacePolicy": "Delete",
    },
    "TestCommonResourcesCloudWatchLogsPolicy1662253E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestCommonResourcesCloudWatchLogsPolicy1662253E",
        "Roles": Array [
          Object {
            "Ref": "TestRole6C9272DF",
          },
          Object {
            "Ref": "TestCommonResourcesCustomResourceLambdaRole15E04CF9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestCommonResourcesCustomResourceLambda707B5671": Object {
      "DependsOn": Array [
        "TestCommonResourcesCustomResourceLambdaRole15E04CF9",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "CloudWatchLogsPolicy covers a permission to write CloudWatch logs.",
            },
            Object {
              "id": "W89",
              "reason": "VPC not needed for lambda",
            },
            Object {
              "id": "W92",
              "reason": "Does not run concurrent executions",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "testbucketname",
          "S3Key": "/testPrefix/custom-resource.zip",
        },
        "Description": "CFN Lambda backed custom resource to deploy assets to s3",
        "Environment": Object {
          "Variables": Object {
            "METRIC_URL": "http://testMetricsUrl.com",
            "SOLUTION_ID": "testId",
            "VERSION": "testVersion",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "TestCommonResourcesCustomResourceLambdaRole15E04CF9",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "SolutionId",
            "Value": "testId",
          },
        ],
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestCommonResourcesCustomResourceLambdaRole15E04CF9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":s3:::testbucketname/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "CustomResourcePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestCommonResourcesLogsBucket5B4DBD4F": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This is the logging bucket, it does not require logging.",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "SolutionId",
            "Value": "testId",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "TestCommonResourcesLogsBucketPolicyAB18A08E": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "TestCommonResourcesLogsBucket5B4DBD4F",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "TestCommonResourcesLogsBucket5B4DBD4F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "TestCommonResourcesLogsBucket5B4DBD4F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "TestCommonResourcesUUIDFDB821D1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Resource": "UUID",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "TestCommonResourcesCustomResourceLambda707B5671",
            "Arn",
          ],
        },
      },
      "Type": "Custom::UUID",
      "UpdateReplacePolicy": "Delete",
    },
    "TestRole6C9272DF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
